/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/ghost.glb --types --transform -o src/models/Ghost_temp.tsx 
Files: public/ghost.glb [14.03MB] > R:\Suhas\Blockrooms\client\src\models\ghost-transformed.glb [2.57MB] (82%)
Author: LostBoyz2078 (https://sketchfab.com/LostModels2025)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/ghost-daughter-89850ac12e0f468582d4d0dcebd4efbc
Title: Ghost Daughter
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'

type ActionName = 'GltfAnimation 0'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Object_7: THREE.SkinnedMesh
    Object_10: THREE.SkinnedMesh
    Object_13: THREE.SkinnedMesh
    Object_16: THREE.SkinnedMesh
    Object_19: THREE.SkinnedMesh
    Object_22: THREE.SkinnedMesh
    GLTF_created_0_rootJoint: THREE.Bone
  }
  materials: {
    ['Mat.8']: THREE.MeshStandardMaterial
    ['Mat.7']: THREE.MeshStandardMaterial
    ['Mat.6']: THREE.MeshStandardMaterial
    ['Mat.5']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>()
  const { scene, animations } = useGLTF('/ghost-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <primitive object={nodes.GLTF_created_0_rootJoint} />
        <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials['Mat.8']} skeleton={nodes.Object_7.skeleton} scale={0.004} />
        <skinnedMesh name="Object_10" geometry={nodes.Object_10.geometry} material={materials['Mat.7']} skeleton={nodes.Object_10.skeleton} scale={0.004} />
        <skinnedMesh name="Object_13" geometry={nodes.Object_13.geometry} material={materials['Mat.6']} skeleton={nodes.Object_13.skeleton} scale={0.004} />
        <skinnedMesh name="Object_16" geometry={nodes.Object_16.geometry} material={materials['Mat.5']} skeleton={nodes.Object_16.skeleton} scale={0.004} />
        <skinnedMesh name="Object_19" geometry={nodes.Object_19.geometry} material={materials['Mat.8']} skeleton={nodes.Object_19.skeleton} scale={0.004} />
        <skinnedMesh name="Object_22" geometry={nodes.Object_22.geometry} material={materials['Mat.6']} skeleton={nodes.Object_22.skeleton} scale={0.004} />
      </group>
    </group>
  )
}

useGLTF.preload('/ghost-transformed.glb')
