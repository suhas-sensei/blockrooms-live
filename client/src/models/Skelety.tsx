/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 skelety.glb --types 
Author: CommunicationNode (https://sketchfab.com/Starven38)
License: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)
Source: https://sketchfab.com/3d-models/skeleton-low-tier-enemy-412e0e9990d5464bae1173972a4fa38b
Title: Skeleton - low tier enemy
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'

type ActionName = 'Lesha_walk' | 'Lesha_attack_1' | 'Lesha_idle' | 'Lesha_hitted_1' | 'Lesha_hitted_2'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Object_23: THREE.Mesh
    Object_65: THREE.Mesh
    Object_67: THREE.Mesh
    Object_69: THREE.Mesh
    Object_63: THREE.Mesh
    Object_7: THREE.SkinnedMesh
    Object_8: THREE.SkinnedMesh
    Object_10: THREE.SkinnedMesh
    Object_12: THREE.SkinnedMesh
    Object_14: THREE.SkinnedMesh
    GLTF_created_0_rootJoint: THREE.Bone
  }
  materials: {
    bgl_mat: THREE.MeshPhysicalMaterial
    Hilt: THREE.MeshPhysicalMaterial
    Blade: THREE.MeshPhysicalMaterial
    Pummel: THREE.MeshStandardMaterial
    Handle: THREE.MeshStandardMaterial
    Bones___Vray: THREE.MeshPhysicalMaterial
    Material: THREE.MeshStandardMaterial
    Undead_Gear: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>(null!)
  const { scene, animations } = useGLTF('/skelety.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Lesha_-_Skelet_-_armature_64">
                <group name="GLTF_created_0">
                  <primitive object={nodes.GLTF_created_0_rootJoint} />
                  <group name="skeleton_60" />
                  <group name="Undead_Gear_Mesh_61" />
                  <group name="Undead_Gear_Mesh001_62" />
                  <group name="Undead_Gear_Mesh002_63" />
                  <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials.Bones___Vray} skeleton={nodes.Object_7.skeleton} />
                  <skinnedMesh name="Object_8" geometry={nodes.Object_8.geometry} material={materials.Material} skeleton={nodes.Object_8.skeleton} />
                  <skinnedMesh name="Object_10" geometry={nodes.Object_10.geometry} material={materials.Undead_Gear} skeleton={nodes.Object_10.skeleton} />
                  <skinnedMesh name="Object_12" geometry={nodes.Object_12.geometry} material={materials.Undead_Gear} skeleton={nodes.Object_12.skeleton} />
                  <skinnedMesh name="Object_14" geometry={nodes.Object_14.geometry} material={materials.Undead_Gear} skeleton={nodes.Object_14.skeleton} />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/skelety.glb')
